class Solution {
public:
    int distinctSubseqII(string s) {         
        long long k[30];                               // 桶 ， 也可以理解为dp 数组
    for( int i=0 ; i<30 ; i++ )
    {
        k[i] = 0;
    }
    int n=s.size();
    long long f=0;
    for( int i=0 , j ; i<n ;i++ )                    //对每个都遍历，相当于往后加上当前遍历到的元素 
    {
        f=1;
        for( j = 0 ; j <  26 ; j++ )
        {
            f = ( k[j] + f ) % 1000000007 ;
        }
        k[s[i] - 'a' ] = f ;                          //更新以当前元素结尾的子序列
    }
    f=0;
    for(int i =0 ; i<30 ; i++ )                      //答案为所有元素结尾的子序列相加的和 
         f = ( f + k[i] ) % 1000000007;
    return f;
    }
private:
    static constexpr int mod = 1000000007;
};
