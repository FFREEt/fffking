/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        
        if(head == nullptr) return head;
        ListNode* headd=head;
        while(headd)  //刚开始写的headd->next 太绕了而且逻辑比较复杂，用单个变量解决就好多了
        {
            while(headd->next && headd->val == headd->next->val)
                headd->next = headd->next->next;
            headd=headd->next;
        }
        return head;
    }
};
